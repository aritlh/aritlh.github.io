<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aritlh&#39;s Wiki</title>
  
  <subtitle>Knowledge cannot be fragmented, it must be structured</subtitle>
  <link href="http://aritlh.github.io/atom.xml" rel="self"/>
  
  <link href="http://aritlh.github.io/"/>
  <updated>2024-04-15T02:42:06.733Z</updated>
  <id>http://aritlh.github.io/</id>
  
  <author>
    <name>Aritlh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Badstore v1.2.3 Walkthrough</title>
    <link href="http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/Vulnhub/badstore-walkthrough/"/>
    <id>http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/Vulnhub/badstore-walkthrough/</id>
    <published>2024-04-09T18:55:57.000Z</published>
    <updated>2024-04-15T02:42:06.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Doing-Reconnaissance-and-Enumeration"><a href="#Doing-Reconnaissance-and-Enumeration" class="headerlink" title="Doing Reconnaissance and Enumeration"></a>Doing Reconnaissance and Enumeration</h2><p>Boot the machine and run <code>netdiscover</code> with <code>sudo</code> to getting host information.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo netdiscover</span></span><br></pre></td></tr></table></figure><p>after getting the target IP, perform scanning using <code>nmap</code>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo nmap -sSC -nP &lt;IP&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>sudo</code>: This is the command to gain root privileges or administrators privileges. Nmap requires privileges to perform certain scans.</li><li><code>nmap</code>: This is a popular network and port scanning utility.</li><li><code>-sS</code>: This option indicates to perform a TCP SYN Scan, which is one of the more intelligent types of port scans and harder to detect.</li><li><code>-C</code>: This option enables default script scanning. This script is used to gather more information about the detected services.<br><code>-Pn</code>: This option instructs Nmap not to perform host discovery and scan the given IP address directly.</li><li><code>&lt;IP&gt;</code>: This is the target IP address to be scanned.</li></ul><p><img src="https://pbs.twimg.com/media/GK6bE6vagAAu4EM?format=jpg&name=large" alt="Scanning The Target"></p><blockquote><p><em>This would come under the MITRE ATT&amp;CK technique of Unsecured Credentials (T1552), which is a sub-technique of Credential Access (TA0006)</em></p></blockquote><p>If we look carefully after scanning the network, there’s a mysql port open there.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">|_/cgi-bin /scanbot /backup /supplier /upload</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">3306/tcp open  mysql    MySQL 4.1.7-standard        &lt;&lt;--- look at this</span><br><span class="line">| mysql-info: </span><br><span class="line">|   Protocol: 10</span><br><span class="line">|   Version: 4.1.7-standard</span><br><span class="line">|   Thread ID: 20</span><br><span class="line">|   Capabilities flags: 33324</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Let’s try to access the database using <strong>root</strong> user.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mariadb -h &lt;IP&gt; -u root -p</span></span><br></pre></td></tr></table></figure><p>the <strong>Master System Administrator</strong> user looks interesting, the passwd looks like md5 hash. look for any md5 decoder on google.</p><p><img src="https://pbs.twimg.com/media/GK7ASVmaoAAYv1R?format=png&name=medium" alt="Accessing The Database Targetq"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Doing-Reconnaissance-and-Enumeration&quot;&gt;&lt;a href=&quot;#Doing-Reconnaissance-and-Enumeration&quot; class=&quot;headerlink&quot; title=&quot;Doing Reconnaissance</summary>
      
    
    
    
    <category term="Hacking" scheme="http://aritlh.github.io/categories/Hacking/"/>
    
    <category term="CTFs Walkthrough" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/"/>
    
    <category term="Vulnhub" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/Vulnhub/"/>
    
    
    <category term="Vulnhub" scheme="http://aritlh.github.io/tags/Vulnhub/"/>
    
  </entry>
  
  <entry>
    <title>Scavanger Hunt</title>
    <link href="http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/picoCTF/scavanger-hunt/"/>
    <id>http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/picoCTF/scavanger-hunt/</id>
    <published>2024-03-23T07:55:57.000Z</published>
    <updated>2024-04-15T02:42:09.383Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h2><blockquote><p><em>You should have enough hints to find the files, don’t run a brute forcer.</em></p></blockquote><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><p><a href="http://mercury.picoctf.net:44070/">http://mercury.picoctf.net:44070/</a></p><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><p>The target looks like this:<br><img src="https://i.imgur.com/MZypyay.png#center" alt="..."></p><p>And some of info we got was from <a href="http://mercury.picoctf.net:44070/">here</a>:</p><figure class="highlight html"><figcaption><span>&#123; linenos</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mycss.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;myjs.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Here&#x27;s the first part of the flag: picoCTF&#123;t --&gt;</span></span><br></pre></td></tr></table></figure><p>We think that there must be something inside <code>mycss.css</code> file and <code>myjs.js</code> file. Why don’t we try to open both?</p><p>Inside the <code>mycss.css</code> we’ve found <a href="http://mercury.picoctf.net:44070/mycss.css">part 2</a> of the flag. But we didn’t find the hardcoded part of the flag code in the <code>myjs.js</code> file.</p><p>But if we recall, the CTF game is full puzzles, and there should be a clue in the <code>myjs.js</code> file.</p><p>Take a look at the bottom comment in the <code>myjs.js</code> file, and we know that the sentence <code>/* How can I keep Google from indexing my website? */</code> is a search keyword lmao.</p><figure class="highlight js"><figcaption><span>&#123; linenos</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">openTab</span>(<span class="params">tabName, elmnt, color</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> i, tabcontent, tablinks;</span><br><span class="line">  tabcontent = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;tabcontent&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tabcontent.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    tabcontent[i].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  tablinks = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;tablink&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tablinks.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    tablinks[i].<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(tabName).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span> (elmnt.<span class="property">style</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">    elmnt.<span class="property">style</span>.<span class="property">backgroundColor</span> = color;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">openTab</span>(<span class="string">&quot;tabintro&quot;</span>, <span class="variable language_">this</span>, <span class="string">&quot;#222&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* How can I keep Google from indexing my website? */</span></span><br></pre></td></tr></table></figure><p>Reffering to indexing, namely <code>robots.txt</code>, perhaps we should see if there is anything in there.</p><p><img src="https://i.imgur.com/A6d2mXP.png#center" alt="..."></p><blockquote><p><em>Thanks GOD, part 3 of the flag has been found. however, the closing bracket isn’t written there. Meaning there’s still the next part to be found.</em></p></blockquote><p>Next step, we must find the next part with the keyword is <code>an apache server</code>. I was wondering if that meant <code>.htaccess</code>?</p><p><img src="https://i.imgur.com/bynFIHx.png#center" alt="..."></p><p>Okay, right. And the last one is Store, and I know it will refer to the <code>.DS_Store</code> path.</p><p><img src="https://i.imgur.com/BcQ5hCL.png#center" alt="..."></p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><h3 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h3><p><code>Robots.txt</code> is a text file used by webmasters to instruct search engine crawlers (such as Googlebot) about which parts of a website should be indexed (given to search engines) and which should not be indexed. In the context of hacking, robots.txt can often provide useful insights to attackers. While information about what should not be indexed may not always be confidential, sometimes the information included in robots.txt can provide clues about the structure of sites, subdomains, or directories that may be attractive targets for attackers. Attackers often use this information to identify areas that may be vulnerable or important in an attack.</p><h3 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h3><p>The <code>.htaccess</code> file is a configuration file used on Apache-based web servers. It allows users to control the server configuration for a specific directory directly through a text file. In a hacking context, attackers often look for unencrypted or vulnerable .htaccess files to take control of the server or change the server configuration unauthorisedly. Poorly configured or vulnerable .htaccess files can be leveraged by attackers to perform attacks such as redirect phishing, file access exploits, or even uploading malicious scripts.</p><h3 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h3><p>A <code>.DS_Store</code> file is a metadata file created by the macOS operating system to store display preferences and folder settings. While essentially harmless, in a hacking context, .DS_Store files can provide valuable information to attackers, especially if they are in a file sharing environment. .DS_Store files often store information about the files and folders within them, including the directory structure and filenames, which can give attackers insight into how the system is organised and structured. Attackers can utilise this information to plan attacks, locate sensitive files, or identify areas that may be targeted in further penetration attempts.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hints&quot;&gt;&lt;a href=&quot;#Hints&quot; class=&quot;headerlink&quot; title=&quot;Hints&quot;&gt;&lt;/a&gt;Hints&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;You should have enough hints to find the </summary>
      
    
    
    
    <category term="Hacking" scheme="http://aritlh.github.io/categories/Hacking/"/>
    
    <category term="CTFs Walkthrough" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/"/>
    
    <category term="picoCTF" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/picoCTF/"/>
    
    
    <category term="picoCTF" scheme="http://aritlh.github.io/tags/picoCTF/"/>
    
  </entry>
  
  <entry>
    <title>PW Crack 5</title>
    <link href="http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/picoCTF/pw-crack-5/"/>
    <id>http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/picoCTF/pw-crack-5/</id>
    <published>2024-03-20T15:55:57.000Z</published>
    <updated>2024-04-15T02:29:53.983Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h2><blockquote><p><em>Can you crack the password to get the flag? Download the password checker <a href="https://artifacts.picoctf.net/c/31/level5.py">here</a> and you’ll need the encrypted <a href="https://artifacts.picoctf.net/c/31/level5.flag.txt.enc">flag</a> and the <a href="https://artifacts.picoctf.net/c/31/level5.hash.bin">hash</a> in the same directory too. Here’s a <a href="https://artifacts.picoctf.net/c/31/dictionary.txt">dictionary</a> with all possible passwords based on the password conventions we’ve seen so far.</em></p></blockquote><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><p><img src="https://i.imgur.com/LYTMHWw.png" alt="..."></p><p>we must create a new code from this reference.<br><img src="https://i.imgur.com/rYqpDef.png" alt="..."></p><ul><li>line 12 read <code>directory.txt</code> file</li><li>line 14-17 validating password in <code>directory.txt</code> file.</li></ul><figure class="highlight py"><figcaption><span>&#123; linenos</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">correct_pw_hash = <span class="built_in">open</span>(<span class="string">&#x27;level5.hash.bin&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash_pw</span>(<span class="params">pw_str</span>):</span><br><span class="line">    pw_bytes = <span class="built_in">bytearray</span>()</span><br><span class="line">    pw_bytes.extend(pw_str.encode())</span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(pw_bytes)</span><br><span class="line">    <span class="keyword">return</span> m.digest()</span><br><span class="line"></span><br><span class="line">post_pw_list = <span class="built_in">open</span>(<span class="string">&#x27;dictionary.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>).read().splitlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pw <span class="keyword">in</span> post_pw_list:</span><br><span class="line">    <span class="keyword">if</span> hash_pw(pw) == correct_pw_hash:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;This is your password: &#x27;</span> + pw)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>run this code:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 crack.py</span><br></pre></td></tr></table></figure><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>This code is a password cracker that uses a dictionary attack to find a password. It imports the <code>hashlib</code> module to generate MD5 hashes of passwords. The correct password hash is read from a binary file <code>level5.hash.bin</code> and stored in the <code>correct_pw_hash</code> variable. The <code>hash_pw</code> function takes a string password, converts it to bytearray, hashes it using MD5, and returns the digest. A list of potential passwords is read from a text file <code>dictionary.txt</code> and stored in the <code>post_pw_list</code> variable. The code loops through each password in the <code>post_pw_list</code> list, hashes it using the <code>hash_pw</code> function, and compares it to the correct password hash. If a hashed password matches the correct password hash, the code prints the password and breaks the loop, effectively finding the correct password by brute-forcing it with a list of potential passwords.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hints&quot;&gt;&lt;a href=&quot;#Hints&quot; class=&quot;headerlink&quot; title=&quot;Hints&quot;&gt;&lt;/a&gt;Hints&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Can you crack the password to get the fla</summary>
      
    
    
    
    <category term="Hacking" scheme="http://aritlh.github.io/categories/Hacking/"/>
    
    <category term="CTFs Walkthrough" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/"/>
    
    <category term="picoCTF" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/picoCTF/"/>
    
    
    <category term="picoCTF" scheme="http://aritlh.github.io/tags/picoCTF/"/>
    
  </entry>
  
  <entry>
    <title>PW Crack 3</title>
    <link href="http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/picoCTF/pw-crack-3/"/>
    <id>http://aritlh.github.io/wiki/Hacking/CTFs%20Walkthrough/picoCTF/pw-crack-3/</id>
    <published>2024-03-03T07:21:12.000Z</published>
    <updated>2024-04-15T02:28:16.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h2><blockquote><p><em>Can you crack the password to get the flag? Download the password checker <a href="https://artifacts.picoctf.net/c/16/level3.py">here</a> and you’ll need the encrypted <a href="https://artifacts.picoctf.net/c/16/level3.flag.txt.enc">flag</a> and the <a href="https://artifacts.picoctf.net/c/16/level3.hash.bin">hash</a> in the same directory too. There are 7 potential passwords with 1 being correct. You can find these by examining the password checker script.</em></p></blockquote><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><p><img src="https://i.ibb.co/YpckCS2/image.png" alt="Analyze The Code"></p><p>We can try to crack the password using the list of possible passwords. <code>hashlib</code> is library to hash the passwords and compare them to the hash file. We will create a new crack code to compare hashes.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">correct_pw_hash = <span class="built_in">open</span>(<span class="string">&#x27;level3.hash.bin&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash_pw</span>(<span class="params">pw_str</span>):</span><br><span class="line">    pw_bytes = <span class="built_in">bytearray</span>()</span><br><span class="line">    pw_bytes.extend(pw_str.encode())</span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(pw_bytes)</span><br><span class="line">    <span class="keyword">return</span> m.digest()</span><br><span class="line"></span><br><span class="line">pos_pw_list = [<span class="string">&quot;6997&quot;</span>, <span class="string">&quot;3ac8&quot;</span>, <span class="string">&quot;f0ac&quot;</span>, <span class="string">&quot;4b17&quot;</span>, <span class="string">&quot;ec27&quot;</span>, <span class="string">&quot;4e66&quot;</span>, <span class="string">&quot;865e&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pw <span class="keyword">in</span> pos_pw_list:</span><br><span class="line">    <span class="keyword">if</span> hash_pw(pw) == correct_pw_hash:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;The password is: &quot;</span> + pw)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/h9AZGxh.png" alt="Create a Program to Crack The Password"></p><p>running command:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python3 crack.py</span><br><span class="line"></span><br><span class="line">The password is: <span class="number">865</span>e</span><br></pre></td></tr></table></figure><p><img src="https://i.ibb.co/vqQy2Jb/image.png" alt="Flag Found"></p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Describes an approach to solving the challenge by utilising the hashlib library in Python to hash possible passwords and compare them to the provided hashes. A Python script is provided to iterate through the list of possible passwords and hash them, then compare the hashes to the provided hash file. Upon successful comparison, the correct password will be revealed, allowing access to the flag.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hints&quot;&gt;&lt;a href=&quot;#Hints&quot; class=&quot;headerlink&quot; title=&quot;Hints&quot;&gt;&lt;/a&gt;Hints&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Can you crack the password to get the fla</summary>
      
    
    
    
    <category term="Hacking" scheme="http://aritlh.github.io/categories/Hacking/"/>
    
    <category term="CTFs Walkthrough" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/"/>
    
    <category term="picoCTF" scheme="http://aritlh.github.io/categories/Hacking/CTFs-Walkthrough/picoCTF/"/>
    
    
    <category term="picoCTF" scheme="http://aritlh.github.io/tags/picoCTF/"/>
    
  </entry>
  
  <entry>
    <title>Arch Installation</title>
    <link href="http://aritlh.github.io/wiki/Technology%20Development/Linux/Arch/arch-installation/"/>
    <id>http://aritlh.github.io/wiki/Technology%20Development/Linux/Arch/arch-installation/</id>
    <published>2023-10-24T16:28:59.000Z</published>
    <updated>2024-04-15T02:42:03.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Update-The-System-Clock"><a href="#Update-The-System-Clock" class="headerlink" title="Update The System Clock"></a>Update The System Clock</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl status</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">timedatectl set-ntp <span class="literal">true</span></span></span><br></pre></td></tr></table></figure><h2 id="Partition-The-Disk"><a href="#Partition-The-Disk" class="headerlink" title="Partition The Disk"></a>Partition The Disk</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lsblk</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cfdisk</span></span><br></pre></td></tr></table></figure><h2 id="Format-The-Partition"><a href="#Format-The-Partition" class="headerlink" title="Format The Partition"></a>Format The Partition</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mkfs.ext4 /dev/root_partition</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mkfs.fat -F 32 /dev/efi_system_partition</span></span><br></pre></td></tr></table></figure><h2 id="Mount-the-File-Systems"><a href="#Mount-the-File-Systems" class="headerlink" title="Mount the File Systems"></a>Mount the File Systems</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mount /dev/root_partition /mnt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mount --<span class="built_in">mkdir</span> /dev/efi_system_partition /mnt/boot</span></span><br></pre></td></tr></table></figure><h2 id="Install-Essential-Packages"><a href="#Install-Essential-Packages" class="headerlink" title="Install Essential Packages"></a>Install Essential Packages</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pacstrap -K /mnt base dhcpcd base-devel linux-lts linux-firmware kakoune networkmanager network-manager-applet grub efibootmgr linux-lts-headers mtools git xdg-user-dirs</span></span><br></pre></td></tr></table></figure><h2 id="Configure-the-Systems"><a href="#Configure-the-Systems" class="headerlink" title="Configure the Systems"></a>Configure the Systems</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span></span><br></pre></td></tr></table></figure><h2 id="Chroot"><a href="#Chroot" class="headerlink" title="Chroot"></a>Chroot</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">arch-chroot /mnt</span></span><br></pre></td></tr></table></figure><h2 id="Time-Zone"><a href="#Time-Zone" class="headerlink" title="Time Zone"></a>Time Zone</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Region/City /etc/localtime</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hwclock --systohc</span></span><br></pre></td></tr></table></figure><h2 id="Localization"><a href="#Localization" class="headerlink" title="Localization"></a>Localization</h2><p>Edit <code>/etc/locale.gen</code> and uncomment <code>en_US.UTF-8 UTF-8</code> and other needed locales. Generate the locales by running:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">locale-gen</span></span><br></pre></td></tr></table></figure><p>Create the <code>/etc/locale.conf</code> file, and set the LANG variable accordingly:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><h2 id="Network-Configuration"><a href="#Network-Configuration" class="headerlink" title="Network Configuration"></a>Network Configuration</h2><p>Create <code>/etc/hostname</code> with the name your host:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nameFromYourHost</span><br></pre></td></tr></table></figure><p>Create <code>/etc/hosts</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.0.1   nameFromYourHost.localdomain nameFromYourHost</span><br></pre></td></tr></table></figure><p>Enable Network Manager</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">enable</span> NetworkManager</span></span><br></pre></td></tr></table></figure><h2 id="Install-GRUB"><a href="#Install-GRUB" class="headerlink" title="Install GRUB"></a>Install GRUB</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">grub-mkconfig -o /boot/grub/grub.cfg</span></span><br></pre></td></tr></table></figure><h2 id="Set-the-root-Password"><a href="#Set-the-root-Password" class="headerlink" title="Set the root Password"></a>Set the root Password</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">passwd</span></span><br></pre></td></tr></table></figure><h2 id="Create-a-New-User"><a href="#Create-a-New-User" class="headerlink" title="Create a New User"></a>Create a New User</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">useradd -mG wheel yourUsername</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">passwd yourUsername</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> EDITOR=kakoune</span></span><br></pre></td></tr></table></figure><p>Edit <code>/etc/sudoers</code> run “visudo” and uncomment the following line:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Uncomment to allow members of group wheel to execute any command</span></span><br><span class="line">%wheel ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><h2 id="Exit-Umount-and-Reboot"><a href="#Exit-Umount-and-Reboot" class="headerlink" title="Exit, Umount, and Reboot"></a>Exit, Umount, and Reboot</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">exit</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">umount -a</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">reboot</span></span><br></pre></td></tr></table></figure><h2 id="optional-Mounting-Disk-Partition"><a href="#optional-Mounting-Disk-Partition" class="headerlink" title="(optional) Mounting Disk Partition"></a>(optional) Mounting Disk Partition</h2><p>edit <code>/etc/fstab</code>, and following this reference:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /dev/sda2</span></span><br><span class="line">UUID=******b49-******-4******-******30-******949c/         ext4      rw,relatime0 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/sda1</span></span><br><span class="line">UUID=******-******      /boot     vfat      rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro0 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/sda2</span></span><br><span class="line">UUID=f******-9***-4***-9***-******92949c/         ext4      rw,relatime0 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/sda1</span></span><br><span class="line">UUID=******-******      /boot     vfat      rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro0 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/sda3</span></span><br><span class="line">/dev/disk/by-uuid/12***d*a-****-****-****-************ff /home/renology ext4 defaults 0 2</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Update-The-System-Clock&quot;&gt;&lt;a href=&quot;#Update-The-System-Clock&quot; class=&quot;headerlink&quot; title=&quot;Update The System Clock&quot;&gt;&lt;/a&gt;Update The System</summary>
      
    
    
    
    <category term="Technology Development" scheme="http://aritlh.github.io/categories/Technology-Development/"/>
    
    <category term="Linux" scheme="http://aritlh.github.io/categories/Technology-Development/Linux/"/>
    
    <category term="Arch" scheme="http://aritlh.github.io/categories/Technology-Development/Linux/Arch/"/>
    
    
    <category term="ArchLinux" scheme="http://aritlh.github.io/tags/ArchLinux/"/>
    
  </entry>
  
  <entry>
    <title>Osu! Installation</title>
    <link href="http://aritlh.github.io/wiki/Technology%20Development/Linux/Gaming%20on%20Linux/osu-installation/"/>
    <id>http://aritlh.github.io/wiki/Technology%20Development/Linux/Gaming%20on%20Linux/osu-installation/</id>
    <published>2023-10-24T16:28:59.000Z</published>
    <updated>2024-04-15T02:42:01.320Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>This guide implies you have read <a href="https://wiki.archlinux.org/title/Help:Reading">Help:Reading</a> and&#x2F;or know your ways around Linux. In case you’re using a different distribution, you can try <a href="https://gist.github.com/hwsmm/ba73a5cd82e17cec14fe8d2cc2a8d32d">hwsmm’s guide</a>.</em></p></blockquote><p><a href="https://osu.ppy.sh/">osu!</a> is a freeware rhythm game where player uses mouse and keyboard input to click on circles to the rhythm in main gameplay mode.</p><p>The following install guide has different installation methods for osu!, one with Lutris and a basic one. There are also included some instructions on improving experience with the game, like switching to a custom wine version or switching to PipeWire audio server.</p><p>You should pick your preferred installation method and then decide whether you want to do additional steps to improve your experience with the game also outlined here.</p><h2 id="Installing-osu"><a href="#Installing-osu" class="headerlink" title="Installing osu!"></a>Installing osu!</h2><p>Enable <a href="https://wiki.archlinux.org/title/Multilib">multilib</a> and install <a href="https://archlinux.org/packages/?name=wine">wine</a> and <a href="https://archlinux.org/packages/?name=winetricks">winetricks</a></p><h3 id="Update-Deps"><a href="#Update-Deps" class="headerlink" title="Update Deps"></a>Update Deps</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo pacman -Syy &amp;&amp; sudo pacman -Syu</span></span><br></pre></td></tr></table></figure><h3 id="Prepare-wineprefix"><a href="#Prepare-wineprefix" class="headerlink" title="Prepare wineprefix"></a>Prepare wineprefix</h3><p>Create WINEPREFIX for your osu! installation and run winetricks to install required dependencies for osu! to work correctly. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">WINEARCH=win32 WINEPREFIX=~/.wineosu winetricks dotnet40 gdiplus corefonts baekmuk meiryo tahoma vlgothic cjkfonts fontfix</span></span><br></pre></td></tr></table></figure><p><code>cjkfonts</code> allows you to see CJK characters correctly, instead of squares. gdiplus fixes icon display in osu! settings. </p><blockquote><p><em>You do not need to install gdiplus if you use <a href="https://archlinux.org/packages/?name=wine">wine</a> version 6.10 or above.</em></p></blockquote><p><img src="https://imgur.com/3bHKY0V.png" alt="Prepare Wineprefix"></p><h3 id="Installing-The-Game"><a href="#Installing-The-Game" class="headerlink" title="Installing The Game"></a>Installing The Game</h3><blockquote><p><em>You can skip next 3 steps if you want to symlink your existing osu! installation. Refer to <a href="https://man.archlinux.org/man/ln.1">ln(1)</a> for instructions.</em></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> ~/.wineosu/osu/</span></span><br></pre></td></tr></table></figure><p>Download osu! executable. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget --output-document ~/.wineosu/osu/osu\!.exe https://m1.ppy.sh/r/osu!install.exe</span></span><br></pre></td></tr></table></figure><p>Start osu! and test if it works correctly. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">WINEARCH=win32 WINEPREFIX=~/.wineosu wine ~/.wineosu/osu/osu\!.exe</span></span><br></pre></td></tr></table></figure><p>Create startup script for osu! in <code>~/.wineosu/osu/start.sh</code> create:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">#export PATH=&quot;$HOME/.wineosu/osuwine/bin:$PATH&quot; #Use custom WINE version to run osu!</span></span><br><span class="line"><span class="built_in">export</span> WINEARCH=win32</span><br><span class="line"><span class="built_in">export</span> WINEPREFIX=<span class="string">&quot;<span class="variable">$HOME</span>/.wineosu&quot;</span></span><br><span class="line"><span class="comment">#export WINEFSYNC=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#VSync. For some reason, some people had been getting input latency issues and for some reason, the fix is to set VSync to off.</span></span><br><span class="line"><span class="built_in">export</span> vblank_mode=0 <span class="comment">#For AMD, Intel and others</span></span><br><span class="line"><span class="built_in">export</span> __GL_SYNC_TO_VBLANK=0 <span class="comment">#For NVIDIA proprietary and open source &gt;=500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#export STAGING_AUDIO_PERIOD=10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#start osu!</span></span><br><span class="line">wine osu\!.exe</span><br></pre></td></tr></table></figure><h3 id="Creating-freedesktop-entry"><a href="#Creating-freedesktop-entry" class="headerlink" title="Creating freedesktop entry"></a>Creating freedesktop entry</h3><p>Fetch osu! logo. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget --output-document ~/.wineosu/osu/icon.png https://github.com/ppy/osu-wiki/raw/master/wiki/Brand_identity_guidelines/img/usage-full-colour.png</span></span><br></pre></td></tr></table></figure><p>Create and edit a new desktop entry file for osu!. </p><p>in <code>~/.local/share/applications/osu.desktop</code> create:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Comment=A freeware rhythm game <span class="built_in">where</span> player uses mouse and keyboard input to click on circles to the rhythm <span class="keyword">in</span> main gameplay mode.</span><br><span class="line">Icon=&lt;change to your home folder&gt;/.wineosu/osu/icon.png <span class="comment">#XDG spec doesn\\&#x27;t support environment variables. Enter home path manually.</span></span><br><span class="line">Exec=&lt;change to your home folder&gt;/.wineosu/osu/start.sh <span class="comment">#XDG spec doesn\\&#x27;t support environment variables. Enter home path manually.</span></span><br><span class="line">Path=/home/&lt;change to your home folder&gt;/.wineosu/osu <span class="comment">#XDG spec doesn\\&#x27;t support environment variables. Enter home path manually.</span></span><br><span class="line">GenericName=osu!</span><br><span class="line">Name=osu!</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>Let’s start the GAMEEEEEDKAJDLASJFLASDJFJ!!!<br><img src="https://i.ibb.co/S7RhBwB/screenshot090.jpg" alt="Osu! Running Successfully"></p><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><h3 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h3><p>WTF is this sh*t???!!</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">0128:fixme:virtual:NtFlushProcessWriteBuffers stub</span><br><span class="line">0128:fixme:crypt:SystemFunction041 (010A8A74, 10, 0): stub [RtlDecryptMemory]</span><br><span class="line">0128:fixme:ras:RasEnumConnectionsW (01109FD8,0728F17C,0728F180),stub!</span><br><span class="line">0128:fixme:ras:RasEnumConnectionsW RAS support is not implemented! Configure program to use LAN connection/winsock instead!</span><br><span class="line">0128:fixme:ras:RasConnectionNotificationW (FFFFFFFF,000002F4,0x00000003),stub!</span><br><span class="line">0128:err:winediag:process_attach Failed to load libgnutls, secure connections will not be available.</span><br><span class="line">0128:err:secur32:SECUR32_initSchannelSP no schannel support, expect problems</span><br><span class="line">0128:err:winediag:ntlm_check_version ntlm_auth was not found. Make sure that ntlm_auth &gt;= 3.0.25 is in your path. Usually, you can find it in the winbind package of your distribution.</span><br><span class="line">0128:err:ntlm:ntlm_LsaApInitializePackage no NTLM support, expect problems</span><br><span class="line">0124:fixme:thread:NtQueryInformationThread ThreadIsIoPending info class not supported yet</span><br><span class="line">0024:fixme:olepicture:OLEPictureImpl_QueryInterface () : asking for unsupported interface &#123;c3fcc19e-a970-11d2-8b5a-00a0c9b7c9c4&#125;</span><br><span class="line">0024:fixme:olepicture:OLEPictureImpl_QueryInterface () : asking for unsupported interface &#123;b196b283-bab4-101a-b69c-00aa00341d07&#125;</span><br><span class="line">0024:fixme:olepicture:OLEPictureImpl_QueryInterface () : asking for unsupported interface &#123;00000003-0000-0000-c000-000000000046&#125;</span><br><span class="line">0024:fixme:olepicture:OLEPictureImpl_QueryInterface () : asking for unsupported interface &#123;00000144-0000-0000-c000-000000000046&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Don’t worry, it’s because you haven’t configured the network in wine.</p><p>Take a look at this reference <a href="https://wiki.archlinux.org/title/Wine#Networking">Wine Networking</a>. After installation, the <a href="https://archlinux.org/packages/?name=lib32-gnutls">lib32-gnutls</a> package may need to be <a href="https://wiki.archlinux.org/title/Install">installed</a> for applications making TLS or HTTPS connections to work.</p><p>For ICMP (ping), Wine may need the network access as described in the <a href="https://wiki.winehq.org/FAQ#Failed_to_use_ICMP_.28network_ping.29.2C_this_requires_special_permissions">WineHQ FAQ</a>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">setcap</span> cap_net_raw+epi /usr/bin/wine-preloader</span></span><br></pre></td></tr></table></figure><p>If issues arise after this (such as an unhandled exception or privileged instruction), remove via: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">setcap</span> -r /usr/bin/wine-preloader</span></span><br></pre></td></tr></table></figure><h3 id="Dependency-Requirements"><a href="#Dependency-Requirements" class="headerlink" title="Dependency Requirements"></a>Dependency Requirements</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo pacman -Sy pacman -Sy --noconfirm --needed git base-devel p7zip wget zenity wine-staging winetricks giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo libxcomposite lib32-libxcomposite libxinerama lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader cups samba dosbox</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo pacman --needed -Sy libxcomposite lib32-libxcomposite gnutls lib32-gnutls wine winetricks</span></span><br></pre></td></tr></table></figure><h3 id="Beatmaps"><a href="#Beatmaps" class="headerlink" title="Beatmaps"></a>Beatmaps</h3><p>If your Beatmap couldn’t be loaded successfully. Just following this:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yay -S osu-handler</span></span><br></pre></td></tr></table></figure><h2 id="winetricks-log"><a href="#winetricks-log" class="headerlink" title="winetricks.log"></a>winetricks.log</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">remove_mono internal</span><br><span class="line">winxp</span><br><span class="line">dotnet40</span><br><span class="line">sourcehansans</span><br><span class="line">fakechinese</span><br><span class="line">fakejapanese</span><br><span class="line">fakekorean</span><br><span class="line">unifont</span><br><span class="line">cjkfonts</span><br><span class="line">gdiplus</span><br><span class="line">fakechinese</span><br><span class="line">fakejapanese</span><br><span class="line">fakekorean</span><br><span class="line">cjkfonts</span><br><span class="line">fakechinese</span><br><span class="line">fakejapanese</span><br><span class="line">fakekorean</span><br><span class="line">cjkfonts</span><br><span class="line">fakechinese</span><br><span class="line">fakejapanese</span><br><span class="line">fakekorean</span><br><span class="line">cjkfonts</span><br><span class="line">andale</span><br><span class="line">arial</span><br><span class="line">comicsans</span><br><span class="line">courier</span><br><span class="line">georgia</span><br><span class="line">impact</span><br><span class="line">times</span><br><span class="line">trebuchet</span><br><span class="line">verdana</span><br><span class="line">webdings</span><br><span class="line">corefonts</span><br><span class="line">baekmuk</span><br><span class="line">meiryo</span><br><span class="line">tahoma</span><br><span class="line">vlgothic</span><br><span class="line">fakechinese</span><br><span class="line">fakejapanese</span><br><span class="line">fakekorean</span><br><span class="line">cjkfonts</span><br><span class="line">fontfix</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://osu.ppy.sh/community/forums/topics/1248084?n=1">Installing osu! on Linux with low-latency [2023]</a></li><li><a href="https://wiki.archlinux.org/title/User:Katoumegumi#osu!_(stable)_on_Arch_Linux">KatouMegumi’s guide</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This guide implies you have read &lt;a href=&quot;https://wiki.archlinux.org/title/Help:Reading&quot;&gt;Help:Reading&lt;/a&gt; and&amp;#x2F;or kn</summary>
      
    
    
    
    <category term="Technology Development" scheme="http://aritlh.github.io/categories/Technology-Development/"/>
    
    <category term="Linux" scheme="http://aritlh.github.io/categories/Technology-Development/Linux/"/>
    
    <category term="Gaming on Linux" scheme="http://aritlh.github.io/categories/Technology-Development/Linux/Gaming-on-Linux/"/>
    
    
    <category term="Osu!" scheme="http://aritlh.github.io/tags/Osu/"/>
    
  </entry>
  
  <entry>
    <title>Welcome Aritlh&#39;s Wiki Site</title>
    <link href="http://aritlh.github.io/wiki/index/"/>
    <id>http://aritlh.github.io/wiki/index/</id>
    <published>2017-01-21T18:55:57.000Z</published>
    <updated>2024-04-15T02:04:24.243Z</updated>
    
    <content type="html"><![CDATA[<p>Here is the translation of the passage into English:</p><p>This is aritlh’s personal Wiki site, mainly recording some scattered knowledge points summarized from his own words.</p><p>I’ve always felt that <strong>knowledge should not be fragmented, but structured</strong>. So I hope to find an elegant way to manage my knowledge.</p><p>I have learned about or tried methods such as OneNote, Evernote, Blogs, Wikis, etc. and summarized a set of processes for knowledge acquisition, absorption, and management that I think is relatively reasonable:</p><ol><li><p>Use web pages, RSS, WeChat, and other online channels as sources of knowledge acquisition.</p></li><li><p>Use a note-taking system (handwritten notes, OneNote, Evernote) to initially filter valuable and targeted information, <strong>bookmark</strong> information, <strong>classify and organize</strong> it, and take notes on the <strong>key points</strong> after reading.</p></li><li><p>For the occasional one or two sentences, or very scattered ideas, inspirations, and initially digested content that come to mind, record them in a <strong>Wiki</strong>.</p></li><li><p>Finally, when there is a certain amount of content in a section of the Wiki, re-read the notes and content in that section of the Wiki, refine and distill them, add your own thoughts and understanding, and write an article to be published on a <strong>blog</strong>.</p></li></ol><p>In practice, the <strong>note-taking system</strong> is mainly for <strong>classifying and organizing</strong> large chunks of information, the <strong>Wiki</strong> is mainly for <strong>accumulating</strong> scattered knowledge, and the <strong>blog</strong> is only for the <strong>essence</strong>.</p><p>When a section of the Wiki is first created, there may be very little content or just a sentence. But through this process, as you encounter more and more about that topic, the scattered knowledge also increases, and the content recorded in that section of the Wiki will also increase, which is to <strong>structure and organize what was originally a large amount of fragmented knowledge through accumulation</strong>.</p><p>The purpose of the blog is to <strong>share and showcase</strong> your knowledge and demonstrate your level of expertise. It needs to present something substantial, so it is not suitable for scattered snippets of knowledge. It is more suitable for presenting a <strong>series</strong> of summaries or tutorials, as a highly systematic knowledge platform.</p><p>When I tried to deploy my own Wiki system, I started to struggle with choosing which Wiki system to use. Referring to online blogs, I actually deployed and compared several popular Wiki systems: MediaWiki, DokuWiki, MDwiki, TiddlyWiki, wiz, vimwiki, Simiki, Wikitten, etc. None of them were satisfactory. Some were difficult and complex to deploy, some had ugly interfaces, some couldn’t have nested categories, some nested categories couldn’t be expanded, some couldn’t search, and some even didn’t use Markdown…</p><p>Based on these unsatisfactory user experiences, I summarized some of my requirements for a <strong>personal Wiki</strong>:</p><ul><li>Simple and beautiful interface with a friendly font and layout</li><li>Support for multi-level categorization</li><li>Easy to modify and update content</li><li>Simple deployment</li><li>Category directories can be expanded and collapsed</li><li>When a category is expanded, you can view the titles of all articles&#x2F;entries under that category</li><li>Each article&#x2F;entry can be assigned multiple categories&#x2F;tags</li><li>The Wiki should support internal linking</li><li>Use Markdown to write articles&#x2F;entries</li><li>Support full-text search (searchable content and titles)</li></ul><p>In my previous usage, Wikitten was the closest to my needs, but there were still some conditions that were not met, such as deployment and search. But personally, I liked the style of Wikitten.</p><p>So in the end, I chose to mimic the style of Wikitten and write this Hexo-based Wiki theme hexo-theme-Wikitten as my own Wiki system, which basically implements the above requirements. Now I’m using it for myself for the time being, of course, this initial functionality is still very simple, and there is a bunch of bugs and TODO lists that need to be maintained. I welcome anyone interested to submit PRs.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Here is the translation of the passage into English:&lt;/p&gt;
&lt;p&gt;This is aritlh’s personal Wiki site, mainly recording some scattered knowledg</summary>
      
    
    
    
    
  </entry>
  
</feed>
